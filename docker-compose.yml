services:
  backend: 
    image: social-media-app 
    build: . 
    container_name: django_social
    command: sh -c "python manage.py makemigrations && 
      python manage.py migrate &&
      python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    restart: always 
    volumes:
      - ./django_social:/app 
    env_file: 
      - .env  
    depends_on:
      - db
    networks:
      - main
  db:
    image: postgres:15
    container_name: postgresql_social 
    restart: always 
    environment:
      POSTGRES_DB: social_media
      POSTGRES_USER: ${USER_POSTGRESQL}
      POSTGRES_PASSWORD: ${PASSWORD_POSTGRESQL} 
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - main
  rabbitmq: 
    image: rabbitmq:3-management
    restart: always 
    container_name: rabbitmq_social
    ports:
      - "5674:5672"
      - "15674:15672"
    networks:
      - main

  celery_worker: 
    build: .
    container_name: celery_social
    restart: always 
    command: celery -A django_social worker -l INFO
    volumes:
      - ./django_social:/app
    env_file: 
      - .env  
    depends_on:
      - backend
      - rabbitmq
      - db 
    environment:
      - CELERY_FORCE_ROOT="true"
    networks:
      - main

  redis:
    restart: unless-stopped
    command: redis-server --appendonly yes
    image: redis:latest
    volumes:
      - redis_data:/data
    ports:
      - "6381:6379"
    networks:
      - main



volumes:
  postgres_data:
  redis_data:

networks:
  main: